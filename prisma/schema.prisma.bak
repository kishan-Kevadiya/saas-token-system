generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model zones {
  id          Int       @id @default(autoincrement())
  hash_id     String    @unique @default(uuid()) @db.VarChar(36)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.DateTime(6)
  updated_at  DateTime? @updatedAt @db.DateTime(6)
  deleted_at  DateTime? @db.DateTime(6)
  is_active   Int?      @default(1)
  description String?   @db.VarChar(255)
  created_by  Int
  updated_by  Int?
  deleted_by  Int?
  states      states[]  @relation("ZoneStates")

  @@unique([name, deleted_at])
}

model states {
  id          Int          @id @default(autoincrement())
  hash_id     String       @unique @default(uuid()) @db.VarChar(36)
  name        String       @db.VarChar(255)
  zone_id     Int
  created_at  DateTime     @default(now()) @db.DateTime(6)
  updated_at  DateTime?    @updatedAt @db.DateTime(6)
  deleted_at  DateTime?    @db.DateTime(6)
  is_active   Int?         @default(1)
  description String?      @db.VarChar(255)
  created_by  Int
  updated_by  Int?
  deleted_by  Int?
  districts   districts[]  @relation("state_districts")
  ht_company  ht_company[] @relation("ht_company_states")
  zone        zones        @relation("ZoneStates", fields: [zone_id], references: [id])

  @@unique([name, deleted_at])
  @@index([zone_id], map: "states_zone_id_fkey")
}

model districts {
  id          Int       @id @default(autoincrement())
  hash_id     String    @unique @default(uuid()) @db.VarChar(36)
  name        String    @db.VarChar(255)
  state_id    Int
  created_at  DateTime  @default(now()) @db.DateTime(6)
  updated_at  DateTime? @updatedAt @db.DateTime(6)
  deleted_at  DateTime? @db.DateTime(6)
  is_active   Int?      @default(1)
  description String?   @db.VarChar(255)
  created_by  Int
  updated_by  Int?
  deleted_by  Int?
  cities      cities[]  @relation("district_city")
  state       states    @relation("state_districts", fields: [state_id], references: [id])

  @@unique([name, deleted_at])
  @@index([state_id], map: "districts_state_id_fkey")
}

model city_categories {
  id          Int       @id @default(autoincrement())
  hash_id     String    @unique @default(uuid()) @db.VarChar(36)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.DateTime(6)
  updated_at  DateTime? @updatedAt @db.DateTime(6)
  deleted_at  DateTime? @db.DateTime(6)
  is_active   Int?      @default(1)
  description String?   @db.VarChar(255)
  created_by  Int
  updated_by  Int?
  deleted_by  Int?
  cities      cities[]  @relation("city_categories_city")
}

model cities {
  id               Int              @id @default(autoincrement())
  hash_id          String           @unique @default(uuid()) @db.VarChar(36)
  name             String           @db.VarChar(255)
  district_id      Int
  city_category_id Int?
  created_at       DateTime         @default(now()) @db.DateTime(6)
  updated_at       DateTime?        @updatedAt @db.DateTime(6)
  deleted_at       DateTime?        @db.DateTime(6)
  is_active        Int?             @default(1)
  description      String?          @db.VarChar(255)
  created_by       Int
  updated_by       Int?
  deleted_by       Int?
  city_category    city_categories? @relation("city_categories_city", fields: [city_category_id], references: [id])
  district         districts        @relation("district_city", fields: [district_id], references: [id])
  ht_company       ht_company[]     @relation("ht_company")
  pin_codes        pin_codes[]      @relation("pinCode_city")

  @@unique([name, district_id, deleted_at])
  @@index([city_category_id], map: "cities_city_category_id_fkey")
  @@index([district_id], map: "cities_district_id_fkey")
}

model pin_codes {
  id             Int                     @id @default(autoincrement())
  hash_id        String                  @unique @default(uuid()) @db.VarChar(36)
  pin_code       Int
  city_id        Int
  created_at     DateTime                @default(now()) @db.DateTime(6)
  updated_at     DateTime?               @updatedAt @db.DateTime(6)
  deleted_at     DateTime?               @db.DateTime(6)
  is_active      Int?                    @default(1)
  description    String?                 @db.VarChar(255)
  created_by     Int
  updated_by     Int?
  deleted_by     Int?
  constituencies constituency_pincodes[] @relation("constituency_pincodes_pincode")
  city           cities                  @relation("pinCode_city", fields: [city_id], references: [id])

  @@unique([pin_code, city_id, deleted_at])
  @@index([city_id], map: "pin_codes_city_id_fkey")
}

model constituency {
  id                    Int                     @id @default(autoincrement())
  hash_id               String                  @unique @default(uuid()) @db.VarChar(36)
  name                  String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.DateTime(6)
  updated_at            DateTime?               @updatedAt @db.DateTime(6)
  deleted_at            DateTime?               @db.DateTime(6)
  is_active             Int?                    @default(1)
  description           String?                 @db.VarChar(255)
  created_by            Int
  updated_by            Int?
  deleted_by            Int?
  constituency_pincodes constituency_pincodes[] @relation("constituency_pincodes_constituency")

  @@unique([name, deleted_at])
}

model constituency_pincodes {
  constituency_id Int
  pincode_id      Int
  constituency    constituency @relation("constituency_pincodes_constituency", fields: [constituency_id], references: [id])
  pincode         pin_codes    @relation("constituency_pincodes_pincode", fields: [pincode_id], references: [id])

  @@id([constituency_id, pincode_id])
  @@index([pincode_id], map: "constituency_pincodes_pincode_id_fkey")
}

model main_company {
  id           Int          @id @default(autoincrement())
  hash_id      String       @unique @default(uuid()) @db.VarChar(36)
  company_name String       @db.VarChar(255)
  type         PackageType
  created_at   DateTime     @default(now()) @db.DateTime(6)
  updated_at   DateTime?    @updatedAt @db.DateTime(6)
  deleted_at   DateTime?    @db.DateTime(6)
  expired_at   DateTime     @db.DateTime(6)
  token_limit  Int?
  ht_company   ht_company[] @relation("ht_netsol_company_main_company")
}

model ht_company {
  id                             Int                              @id @default(autoincrement())
  hash_id                        String                           @unique @default(uuid()) @db.VarChar(36)
  main_company_id                Int
  company_name                   String                           @db.VarChar(255)
  fullname                       String?                          @db.VarChar(255)
  asccode                        String                           @db.VarChar(125)
  email                          String?                          @db.VarChar(255)
  contact_no                     String?                          @db.VarChar(255)
  username                       String?                          @db.VarChar(125)
  password                       String?                          @db.VarChar(255)
  address                        String?                          @db.Text
  phone                          String?                          @db.VarChar(255)
  latitude                       String?                          @db.VarChar(255)
  longitude                      String?                          @db.VarChar(255)
  sms_or_print                   Int?
  send_sms                       Int?
  appointment_generate           Int?                             @default(0)
  customer_register              Int?                             @default(0)
  state_id                       Int?
  city_id                        Int?
  saturday_off                   Int                              @default(0) @db.TinyInt
  sunday_off                     Int                              @default(0) @db.TinyInt
  app_hour                       Int                              @default(0)
  parent_sub_series              Int                              @default(0) @db.TinyInt
  is_generate_token_sms          Int                              @default(0) @db.TinyInt
  generate_token_sms_url         String?                          @db.Text
  generate_token_sms_format      String?                          @db.Text
  is_print_token                 Boolean?
  is_download_token              Boolean?
  token                          String?                          @db.VarChar(255)
  created_at                     DateTime                         @default(now()) @db.DateTime(6)
  updated_at                     DateTime?                        @updatedAt @db.DateTime(6)
  deleted_at                     DateTime?                        @db.DateTime(6)
  logo_url                       String?                          @db.Text
  ht_appointment_token_form_data ht_appointment_token_form_data[] @relation("ht_appointment_token_form_data_ht_company")
  ht_buttons                     ht_buttons[]                     @relation("ht_buttons_ht_company")
  city                           cities?                          @relation("ht_company", fields: [city_id], references: [id])
  main_company                   main_company                     @relation("ht_netsol_company_main_company", fields: [main_company_id], references: [id])
  state                          states?                          @relation("ht_company_states", fields: [state_id], references: [id])
  ht_company_languages           ht_company_languages[]           @relation("ht_company_languages_ht_company")
  ht_company_settings            ht_company_settings[]            @relation("ht_company_settings_ht_company")
  ht_counter_filter              ht_counter_filter[]              @relation("ht_company_ht_counter_filter")
  ht_counter_settings            ht_counter_settings[]            @relation("ht_counter_setting_ht_company")
  ht_department                  ht_department[]                  @relation("ht_deparment_ht_company")
  ht_holidays                    ht_holidays[]                    @relation("ht_company_ht_holidays")
  ht_series                      ht_series[]                      @relation("ht_series_ht_company")
  ht_user_session_logs           ht_user_session_logs[]           @relation("ht_user_session_logs_ht_company")
  ht_users                       ht_users[]                       @relation("ht_users_ht_company")
  otp                            otp[]                            @relation("otp_ht_company")
  print_settings                 print_settings[]                 @relation("print_settings_ht_company")
  token_logs                     token_logs[]                     @relation("token_logs_ht_company")
  tokens                         tokens[]                         @relation("tokens_ht_company")

  @@unique([asccode, email, contact_no, username, deleted_at])
  @@index([city_id], map: "ht_company_city_id_fkey")
  @@index([main_company_id], map: "ht_company_main_company_id_fkey")
  @@index([state_id], map: "ht_company_state_id_fkey")
}

model ht_users {
  id                   Int                    @id @default(autoincrement())
  hash_id              String                 @unique @default(uuid()) @db.VarChar(36)
  username             String                 @db.VarChar(255)
  password             String                 @db.VarChar(255)
  dept_id              Int
  name                 String                 @db.VarChar(255)
  contact_no           String                 @db.VarChar(255)
  date                 DateTime               @default(now()) @db.Timestamp(0)
  email                String                 @db.VarChar(255)
  counter              String?                @db.VarChar(255)
  ip                   String?                @db.VarChar(255)
  last_access          DateTime?              @db.DateTime(0)
  show_report          String?                @db.VarChar(255)
  is_active            Int                    @default(1) @db.TinyInt
  company_id           Int
  rights               String?                @db.VarChar(50)
  created_at           DateTime               @default(now()) @db.DateTime(6)
  updated_at           DateTime?              @updatedAt @db.DateTime(6)
  deleted_at           DateTime?              @db.DateTime(6)
  ht_user_session_logs ht_user_session_logs[] @relation("ht_user_session_logs_ht_users")
  ht_company           ht_company             @relation("ht_users_ht_company", fields: [company_id], references: [id])
  ht_department        ht_department          @relation("ht_users_ht_department", fields: [dept_id], references: [id])
  token_logs           token_logs[]           @relation("token_logs_ht_users")
  tokens               tokens[]               @relation("tokens_ht_users")

  @@index([company_id], map: "ht_users_company_id_fkey")
  @@index([dept_id], map: "ht_users_dept_id_fkey")
}

model ht_languages {
  id                   Int                    @id @default(autoincrement())
  hash_id              String                 @unique @default(uuid()) @db.VarChar(36)
  name                 String                 @db.VarChar(255)
  code                 String                 @unique @db.VarChar(10)
  title                String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.DateTime(6)
  updated_at           DateTime?              @updatedAt @db.DateTime(6)
  deleted_at           DateTime?              @db.DateTime(6)
  ht_company_languages ht_company_languages[] @relation("ht_company_languages_ht_languages")
  ht_company_settings  ht_company_settings[]  @relation("ht_company_settings_ht_languages")
  tokens               tokens[]               @relation("tokens_ht_languages")
}

model ht_company_languages {
  id          Int          @id @default(autoincrement())
  hash_id     String       @unique @default(uuid()) @db.VarChar(36)
  company_id  Int
  language_id Int
  created_at  DateTime     @default(now()) @db.DateTime(6)
  updated_at  DateTime?    @updatedAt @db.DateTime(6)
  deleted_at  DateTime?    @db.DateTime(6)
  company     ht_company   @relation("ht_company_languages_ht_company", fields: [company_id], references: [id])
  languages   ht_languages @relation("ht_company_languages_ht_languages", fields: [language_id], references: [id])

  @@unique([company_id, language_id, deleted_at])
  @@index([language_id], map: "ht_company_languages_language_id_fkey")
}

model ht_series {
  id                            Int                      @id @default(autoincrement())
  hash_id                       String                   @unique @default(uuid()) @db.VarChar(36)
  series_english_name           String                   @db.VarChar(255)
  series_hindi_name             String                   @db.VarChar(255)
  series_regional_name          String                   @db.VarChar(255)
  comapany_id                   Int
  abbreviation                  String                   @db.VarChar(255)
  description                   String?                  @db.VarChar(255)
  order                         Int
  priority                      Int
  avg_waiting_time              Int?
  start_token                   Int?
  end_token                     Int?
  parent_series_id              Int?
  series_image                  String?                  @db.Text
  start_time                    String?                  @db.VarChar(255)
  end_time                      String?                  @db.VarChar(255)
  slot_duration                 Int?
  total_counter                 Int?
  toke_per_slot                 Int?
  allow_future_appointment      Int?
  allow_same_day_appointment    Int?
  future_appointment_days       Int?
  display_form                  Int                      @default(0) @db.TinyInt
  is_active                     Int                      @default(0) @db.TinyInt
  created_at                    DateTime                 @default(now()) @db.DateTime(6)
  updated_at                    DateTime?                @updatedAt @db.DateTime(6)
  deleted_at                    DateTime?                @db.DateTime(6)
  is_series_generate_type_apply Int                      @default(0) @db.TinyInt
  is_otp_required               Int                      @default(0) @db.TinyInt
  company                       ht_company               @relation("ht_series_ht_company", fields: [comapany_id], references: [id])
  series                        ht_series?               @relation("ht_series_ht_series", fields: [parent_series_id], references: [id])
  ht_series                     ht_series[]              @relation("ht_series_ht_series")
  ht_series_input_fields        ht_series_input_fields[] @relation("ht_series_input_fields_ht_series")
  tokens_series                 tokens[]                 @relation("tokens_ht_series")
  tokens_transfer               tokens[]                 @relation("tokens_ht_series_transfer_series")

  @@index([comapany_id], map: "ht_series_comapany_id_fkey")
  @@index([parent_series_id], map: "ht_series_parent_series_id_fkey")
}

model ht_counter_settings {
  id                      Int        @id @default(autoincrement())
  hash_id                 String     @unique @default(uuid())
  company_id              Int
  counter                 Int?
  height                  String     @db.VarChar(20)
  width                   String     @db.VarChar(20)
  counter_width           String     @db.VarChar(20)
  font_size               String     @db.VarChar(20)
  font_margin             String     @db.VarChar(20)
  created_at              DateTime   @default(now()) @db.DateTime(6)
  updated_at              DateTime?  @updatedAt @db.DateTime(6)
  deleted_at              DateTime?  @db.DateTime(6)
  company_netsol_customer ht_company @relation("ht_counter_setting_ht_company", fields: [company_id], references: [id])

  @@index([company_id], map: "ht_counter_settings_company_id_fkey")
}

model ht_department {
  id                           Int                 @id @default(autoincrement())
  hash_id                      String              @unique @default(uuid())
  company_id                   Int
  dept_english_name            String              @db.VarChar(255)
  dept_hindi_name              String              @db.Text
  dept_regional_name           String              @db.Text
  allow_abbreviation           String              @db.VarChar(255)
  que                          Int?                @default(0) @db.TinyInt
  created_at                   DateTime            @default(now()) @db.DateTime(6)
  updated_at                   DateTime?           @updatedAt @db.DateTime(6)
  deleted_at                   DateTime?           @db.DateTime(6)
  is_active                    Int                 @default(1) @db.TinyInt
  ht_buttons                   ht_buttons[]        @relation("ht_buttons_ht_department")
  ht_counter_filter_department ht_counter_filter[] @relation("ht_counter_filter_department")
  ht_counter_filter            ht_counter_filter[] @relation("ht_counter_filter_transfer_department")
  department_company           ht_company          @relation("ht_deparment_ht_company", fields: [company_id], references: [id])
  ht_users                     ht_users[]          @relation("ht_users_ht_department")
  tokens                       tokens[]            @relation("tokens_transfer_ht_department")

  @@index([company_id], map: "ht_department_company_id_fkey")
}

model ht_series_input_fields {
  id                    Int       @id @default(autoincrement())
  hash_id               String    @unique @default(uuid()) @db.VarChar(36)
  series_id             Int
  field_english_name    String    @db.VarChar(255)
  field_hindi_name      String    @db.VarChar(255)
  field_regional_name   String    @db.VarChar(255)
  field_type            String    @db.VarChar(50)
  is_required           Int       @default(0) @db.TinyInt
  created_at            DateTime  @default(now()) @db.DateTime(6)
  updated_at            DateTime? @updatedAt @db.DateTime(6)
  deleted_at            DateTime? @db.DateTime(6)
  is_verification_field Int       @default(0) @db.TinyInt
  series                ht_series @relation("ht_series_input_fields_ht_series", fields: [series_id], references: [id])

  @@index([series_id], map: "ht_series_input_fields_series_id_fkey")
}

model tokens {
  id                             Int                              @id @default(autoincrement())
  hash_id                        String                           @unique @default(uuid()) @db.VarChar(36)
  generate_token_time            DateTime                         @default(now()) @db.Timestamp(0)
  token_abbreviation             String                           @db.VarChar(50)
  token_number                   Int
  token_date                     DateTime                         @db.Date
  token_calling_time             DateTime?                        @db.DateTime(6)
  token_out_time                 DateTime?                        @db.DateTime(6)
  priority                       Int
  counter_number_id              Int?
  token_status                   TokenStatus
  bell_ring                      Int                              @default(0) @db.TinyInt
  bell_time                      DateTime?                        @db.DateTime(6)
  user_id                        Int?
  token_series_number            String                           @db.VarChar(50)
  reason                         String?                          @db.Text
  language_id                    Int
  company_id                     Int
  customer_mobile_number         String?                          @db.VarChar(50)
  customer_name                  String?                          @db.VarChar(55)
  created_at                     DateTime                         @default(now()) @db.DateTime(6)
  updated_at                     DateTime?                        @updatedAt @db.DateTime(6)
  deleted_at                     DateTime?                        @db.DateTime(6)
  series_id                      Int
  token_transfer_counter_id      Int?
  hold_in_time                   DateTime?                        @db.DateTime(6)
  hold_out_time                  DateTime?                        @db.DateTime(6)
  token_transfer_department_id   Int?
  time_taken                     String                           @default("00:00:00") @db.VarChar(70)
  ht_appointment_token_form_data ht_appointment_token_form_data[] @relation("ht_appointment_token_form_data_tokens")
  otp                            otp[]                            @relation("otp_tokens")
  token_logs                     token_logs[]                     @relation("token_logs_ht_tokens")
  company                        ht_company                       @relation("tokens_ht_company", fields: [company_id], references: [id])
  counter                        ht_counter_filter?               @relation("tokens_ht_counter", fields: [counter_number_id], references: [id])
  ht_language                    ht_languages                     @relation("tokens_ht_languages", fields: [language_id], references: [id])
  token_series                   ht_series                        @relation("tokens_ht_series", fields: [series_id], references: [id])
  token_transfer_counter         ht_counter_filter?               @relation("transfer_token_tokens_ht_counter", fields: [token_transfer_counter_id], references: [id])
  token_transfer_department      ht_department?                   @relation("tokens_transfer_ht_department", fields: [token_transfer_department_id], references: [id])
  ht_user                        ht_users?                        @relation("tokens_ht_users", fields: [user_id], references: [id])
  ht_series                      ht_series[]                      @relation("tokens_ht_series_transfer_series")

  @@unique([token_number, token_date, company_id, deleted_at])
  @@index([company_id], map: "tokens_company_id_fkey")
  @@index([counter_number_id], map: "tokens_counter_number_id_fkey")
  @@index([language_id], map: "tokens_language_id_fkey")
  @@index([series_id], map: "tokens_series_id_fkey")
  @@index([token_transfer_counter_id], map: "tokens_token_transfer_counter_id_fkey")
  @@index([token_transfer_department_id], map: "tokens_token_transfer_department_id_fkey")
  @@index([user_id], map: "tokens_user_id_fkey")
}

model ht_counter_filter {
  id                        Int                    @id @default(autoincrement())
  hash_id                   String                 @unique @default(uuid())
  dept_id                   Int
  company_id                Int
  date                      DateTime?              @db.Date
  counter_no                Int
  counter_name              String                 @db.VarChar(255)
  series                    String                 @db.VarChar(256)
  enter_by_admin            Int                    @default(0) @db.TinyInt
  flag                      String?                @db.VarChar(255)
  start_time                String                 @db.VarChar(200)
  end_time                  String                 @db.VarChar(200)
  auto_call                 Int?
  auto_time                 Int?
  dis_srs                   Int?
  ip_machine                String?                @db.VarChar(100)
  transfer_token_wise       TransferTokenWise?
  transfer_token_next_click Int                    @default(0) @db.TinyInt
  created_at                DateTime               @default(now()) @db.DateTime(6)
  updated_at                DateTime?              @updatedAt @db.DateTime(6)
  deleted_at                DateTime?              @db.DateTime(6)
  transfer_counter_id       Int?
  transfer_department_id    Int?
  transfer_token_method     TransferTokenMethod?
  is_logged_in              Int                    @default(0) @db.TinyInt
  is_otp_restricted         Int                    @default(0) @db.TinyInt
  company                   ht_company             @relation("ht_company_ht_counter_filter", fields: [company_id], references: [id])
  department                ht_department          @relation("ht_counter_filter_department", fields: [dept_id], references: [id])
  transfer_counter          ht_counter_filter?     @relation("ht_counter_filter_transfer_counter", fields: [transfer_counter_id], references: [id])
  ht_counter_filter         ht_counter_filter[]    @relation("ht_counter_filter_transfer_counter")
  transfer_department       ht_department?         @relation("ht_counter_filter_transfer_department", fields: [transfer_department_id], references: [id])
  ht_user_session_logs      ht_user_session_logs[] @relation("ht_user_session_logs_ht_counter_filter")
  otp                       otp[]                  @relation("otp_counters")
  token_logs                token_logs[]           @relation("token_logs_ht_counter_filter")
  tokens                    tokens[]               @relation("tokens_ht_counter")
  transfer_tokens           tokens[]               @relation("transfer_token_tokens_ht_counter")

  @@index([company_id], map: "ht_counter_filter_company_id_fkey")
  @@index([dept_id], map: "ht_counter_filter_dept_id_fkey")
  @@index([transfer_counter_id], map: "ht_counter_filter_transfer_counter_id_fkey")
  @@index([transfer_department_id], map: "ht_counter_filter_transfer_department_id_fkey")
}

model ht_appointment_token_form_data {
  id             Int        @id @default(autoincrement())
  hash_id        String     @unique @default(uuid()) @db.VarChar(36)
  company_id     Int
  token_id       Int
  appointment_id Int?
  form_data      Json
  company        ht_company @relation("ht_appointment_token_form_data_ht_company", fields: [company_id], references: [id])
  tokens         tokens     @relation("ht_appointment_token_form_data_tokens", fields: [token_id], references: [id])

  @@index([company_id], map: "ht_appointment_token_form_data_company_id_fkey")
  @@index([token_id], map: "ht_appointment_token_form_data_token_id_fkey")
}

model ht_buttons {
  id            Int           @id @default(autoincrement())
  hash_id       String        @unique @default(uuid()) @db.VarChar(36)
  name          ButtonName
  company_id    Int
  created_at    DateTime      @default(now()) @db.DateTime(6)
  updated_at    DateTime?     @updatedAt @db.DateTime(6)
  deleted_at    DateTime?     @db.DateTime(6)
  dept_id       Int
  db_test       Int?
  ht_company    ht_company    @relation("ht_buttons_ht_company", fields: [company_id], references: [id])
  ht_department ht_department @relation("ht_buttons_ht_department", fields: [dept_id], references: [id])

  @@unique([dept_id, name, company_id, deleted_at])
  @@index([company_id], map: "ht_buttons_company_id_fkey")
}

model ht_company_settings {
  id                         Int                       @id @default(autoincrement())
  hash_id                    String                    @unique @default(uuid()) @db.VarChar(36)
  language_id                String                    @db.VarChar(255)
  view_style                 Int                       @default(0) @db.TinyInt
  display_scroll             Int                       @default(0) @db.TinyInt
  series_selection           SeriesSelection           @default(SINGLE)
  series_token_generate_type SeriesTokenGenerationType @default(SharedTokenSeries)
  srs_count                  Int?
  next_view                  Int?
  block_size                 Int?
  font_size                  Int?
  company_id                 Int
  minutes_of_calling_before  String?                   @db.VarChar(100)
  display_transfer_token     DisplayTransferToken
  created_at                 DateTime                  @default(now()) @db.DateTime(6)
  updated_at                 DateTime?                 @updatedAt @db.DateTime(6)
  deleted_at                 DateTime?                 @db.DateTime(6)
  ht_company                 ht_company                @relation("ht_company_settings_ht_company", fields: [company_id], references: [id])
  ht_languages               ht_languages              @relation("ht_company_settings_ht_languages", fields: [language_id], references: [code])

  @@index([company_id], map: "ht_company_settings_company_id_fkey")
  @@index([language_id], map: "ht_company_settings_language_id_fkey")
}

model ht_user_session_logs {
  id          Int               @id @default(autoincrement())
  hash_id     String            @unique @default(uuid()) @db.VarChar(36)
  user_id     Int
  company_id  Int
  counter_id  Int
  login_time  DateTime          @default(now()) @db.DateTime(6)
  logout_time DateTime?         @db.DateTime(6)
  company     ht_company        @relation("ht_user_session_logs_ht_company", fields: [company_id], references: [id])
  counter     ht_counter_filter @relation("ht_user_session_logs_ht_counter_filter", fields: [counter_id], references: [id])
  user        ht_users          @relation("ht_user_session_logs_ht_users", fields: [user_id], references: [id])

  @@index([company_id], map: "ht_user_session_logs_company_id_fkey")
  @@index([counter_id], map: "ht_user_session_logs_counter_id_fkey")
  @@index([user_id], map: "ht_user_session_logs_user_id_fkey")
}

model token_logs {
  id              Int               @id @default(autoincrement())
  hash_id         String            @unique @default(uuid()) @db.VarChar(36)
  counter_id      Int
  company_id      Int
  previous_status TokenStatus?
  current_status  TokenStatus
  time_taken      String            @default("00:00:00") @db.VarChar(50)
  token_id        Int
  created_at      DateTime          @default(now()) @db.DateTime(6)
  created_by      Int
  company         ht_company        @relation("token_logs_ht_company", fields: [company_id], references: [id])
  counter         ht_counter_filter @relation("token_logs_ht_counter_filter", fields: [counter_id], references: [id])
  created_by_user ht_users          @relation("token_logs_ht_users", fields: [created_by], references: [id])
  token           tokens            @relation("token_logs_ht_tokens", fields: [token_id], references: [id])

  @@index([company_id], map: "token_logs_company_id_fkey")
  @@index([counter_id], map: "token_logs_counter_id_fkey")
  @@index([created_by], map: "token_logs_created_by_fkey")
  @@index([token_id], map: "token_logs_token_id_fkey")
}

model print_settings {
  id            Int              @id @default(autoincrement())
  hash_id       String           @unique @default(uuid()) @db.VarChar(36)
  company_id    Int
  setting_key   PrintSettingKeys
  setting_value String           @db.Text
  created_at    DateTime         @default(now()) @db.DateTime(6)
  updated_at    DateTime?        @updatedAt @db.DateTime(6)
  created_by    Int
  updated_by    Int
  company       ht_company       @relation("print_settings_ht_company", fields: [company_id], references: [id])

  @@unique([company_id, setting_key])
}

model ht_holidays {
  id           Int        @id @default(autoincrement())
  hash_id      String     @unique @default(uuid()) @db.VarChar(36)
  company_id   Int
  holiday_date DateTime   @db.Date
  is_active    Int        @default(1)
  company      ht_company @relation("ht_company_ht_holidays", fields: [company_id], references: [id])

  @@index([company_id], map: "ht_holidays_company_id_fkey")
}

model otp {
  id         Int                @id @default(autoincrement())
  hash_id    String             @unique @default(uuid()) @db.VarChar(36)
  company_id Int
  token_id   Int
  counter_id Int?
  otp        Int
  mobile_no  String             @db.VarChar(15)
  is_verify  Int                @default(0) @db.TinyInt
  expired_at DateTime           @db.Time(0)
  created_at DateTime           @default(now()) @db.DateTime(6)
  updated_at DateTime?          @updatedAt @db.DateTime(6)
  company    ht_company         @relation("otp_ht_company", fields: [company_id], references: [id])
  counter    ht_counter_filter? @relation("otp_counters", fields: [counter_id], references: [id])
  token      tokens             @relation("otp_tokens", fields: [token_id], references: [id])

  @@index([company_id], map: "otp_company_id_fkey")
  @@index([counter_id], map: "otp_counter_id_fkey")
  @@index([token_id], map: "otp_token_id_fkey")
}

enum PackageType {
  PAID
  FREE
}

enum TokenStatus {
  PENDING
  HOLD
  ACTIVE
  TRANSFER
  WAITING
  COMPLETED
}

enum TransferTokenWise {
  COUNTER
  DEPARTMENT
}

enum TransferTokenMethod {
  MANUAL
  DIRECT
}

enum ButtonName {
  NEXT
  HOLD
  TRANSFER
  BELL
  BREAK
  PENDING
}

enum DisplayTransferToken {
  WAITING_LIST
  TRANSFER_LIST
}

enum SeriesSelection {
  SINGLE
  MULTIPLE
}

enum SeriesTokenGenerationType {
  SharedTokenSeries
  IndividualTokenSeries
  RangeTokenGeneration
}

enum PrintSettingKeys {
  NO_OF_PRINT_TOKEN
  TOKEN_SPACE_BETWEEN_LINES
  TOKEN_PWIDTH
  TOKEN_PHEIGHT
  DISPLAY_LOGO
  LOGO_SIZE
  LOGO_STARTPOS
  ISSUE_DATE_TIME
  ISSUE_DATE_TIME_SIZE
  ISSUE_DATE_TIME_SPOS
  DISPLAY_COMPANY_LOCATION
  COMPANY_LOCATION_FONT_SIZE
  COMPANY_LOCATION_POS
  DISPLAY_COMPANY_TITLE
  COMPANY_TITLE_FONT_SIZE
  COMPANY_TITLE_POS
  DISPLAY_DEPARTMENT_TITLE
  DEPT_TITLE_SIZE
  DEPT_TITLE_SPOS
  DISPLAY_COUNTER_TITLE
  COUNTER_TITLE_SIZE
  COUNTER_TITLE_SPOS
  TOKEN_NO_FONT_SIZE
  TOKEN_NO_POS
  TOKEN_TITLE_BEFORE_PRINT
  HINDI_TOKEN_TITLE_BEFORE_PRINT
  RLANGUAGE_TOKEN_TITLE_BEFORE_PRINT
  TITLE_BEFORE_PRINT_TOKEN_NO_FONT_SIZE
  TOKEN_TITLE_START_POS
  DISPLAY_TOKEN_BARCODE
  BARCODE_SIZE
  BARCODE_STARTPOS
  DISPLAY_WAITING_TOKEN_COUNT
  LABEL_DISPLAY_WAITING_TOKEN
  HINDI_LABEL_DISPLAY_WAITING_TOKEN
  RLANGUAGE_LABEL_DISPLAY_WAITING_TOKEN
  WAITING_TOKEN_LBL_FONT_SIZE
  WAITING_TOKEN_START_POS
  DISPLAY_WAITING_TOKEN_TIME
  AVERAGE_WAITING_TIME
  DISPLAY_TOKEN_WAITING_TIME
  HINDI_DISPLAY_TOKEN_WAITING_TIME
  RLANGUAGE_DISPLAY_TOKEN_WAITING_TIME
  WAITING_TOKEN_TIME_FONT_SIZE
  WAITING_TIME_START_POS
  DISPLAY_FOOTER_1
  FOOTER_1_TXT
  HINDI_FOOTER_1_TXT
  RLANGUAGE_FOOTER_1_TXT
  FOOTER_1_SIZE
  FOOTER_1_SPOS
  DISPLAY_FOOTER_2
  FOOTER_2_TXT
  HINDI_FOOTER_2_TXT
  RLANGUAGE_FOOTER_2_TXT
  FOOTER_2_SIZE
  FOOTER_2_SPOS
  DISPLAY_FOOTER_3
  FOOTER_3_TXT
  HINDI_FOOTER_3_TXT
  RLANGUAGE_FOOTER_3_TXT
  FOOTER_3_SIZE
  FOOTER_3_SPOS
  DISPLAY_CAUTIONARY_TOKEN_MESSAGE
  LBL_FOR_DISPLAY_TOKEN_CAUTIONARY
  HINDI_LBL_FOR_DISPLAY_TOKEN_CAUTIONARY
  RLANGUAGE_LBL_FOR_DISPLAY_TOKEN_CAUTIONARY
  TOKEN_CAUTIONARY_SIZE
  TOKEN_CAUTIONARY_POS
  PRINTORDER
  DISPLAY_WELCOME_TOKEN_MESSAGE
  LBL_FOR_DISPLAY_TOKEN_WELCOME
  HINDI_LBL_FOR_DISPLAY_TOKEN_WELCOME
  RLANGUAGE_LBL_FOR_DISPLAY_TOKEN_WELCOME
  TOKEN_WELCOME_SIZE
  TOKEN_WELCOME_POS
  LOGO_HEIGHT
  LOGO_WIDTH
  BARCODE_HEIGHT
  BARCODE_WIDTH
  WAITING_TIME_TYPE
}
